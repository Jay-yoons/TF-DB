CREATE TABLE USERS 
    ( 
     USER_ID       VARCHAR2 (15 CHAR)  NOT NULL , 
     USER_NAME     VARCHAR2 (20 CHAR)  NOT NULL , 
     PHONE_NUMBER  VARCHAR2 (20 CHAR)  NOT NULL , 
     USER_LOCATION VARCHAR2 (50 CHAR) , 
     PASSWORD      VARCHAR2 (255 CHAR)  NOT NULL 
    ) 
;


CREATE TABLE DELETE_FAIL_LOG_USER (
    user_id varchar2(15),
    fail_msg VARCHAR2(4000),
    fail_time TIMESTAMP
);


CREATE MATERIALIZED VIEW MV_USERS_FAV_STORES
BUILD IMMEDIATE
REFRESH FAST ON COMMIT
AS
SELECT * FROM FAV_STORE@PDB_STORES_LINK;

ALTER TABLE USERS 
    ADD CONSTRAINT USERS_PK PRIMARY KEY ( USER_ID ) ;


CREATE DATABASE LINK PDB_USERS_LINK
CONNECT TO USER_ADMIN IDENTIFIED BY "oracle"
USING 'PDB_USER';


CREATE OR REPLACE TRIGGER TRG_USERS_DELETE
AFTER DELETE ON USERS
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    BEGIN
        DELETE FROM FAV_STORE@PDB_STORES_LINK
        WHERE user_id = :OLD.user_id;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            INSERT INTO delete_fail_log(user_id, fail_msg, fail_time)
            VALUES (:OLD.user_id, 'FAV_STORE delete failed: ' || SQLERRM, SYSTIMESTAMP);
            COMMIT;
    END;
    BEGIN
        DELETE FROM BOOKING@PDB_BOOKING_LINK
        WHERE STORE_ID = :OLD.STORE_ID;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            INSERT INTO delete_fail_log(user_id, fail_msg, fail_time)
            VALUES (:OLD.user_id, 'BOOKING delete failed: ' || SQLERRM, SYSTIMESTAMP);
            COMMIT;
    END;
    BEGIN
        DELETE FROM REVIEW@PDB_STORES_LINK
        WHERE STORE_ID = :OLD.STORE_ID;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            INSERT INTO delete_fail_log(user_id, fail_msg, fail_time)
            VALUES (:OLD.user_id, 'REVIEW delete failed: ' || SQLERRM, SYSTIMESTAMP);
            COMMIT;
    END;
END;
/
