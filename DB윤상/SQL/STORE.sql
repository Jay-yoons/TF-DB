CREATE TABLE STORES 
    ( 
     STORE_ID       VARCHAR2 (20 CHAR)  NOT NULL , 
     STORE_NAME     VARCHAR2 (50 CHAR)  NOT NULL , 
     CATEGORY_CODE  INTEGER  NOT NULL , 
     STORE_LOCATION VARCHAR2 (50 CHAR)  NOT NULL , 
     SEAT_NUM       INTEGER  NOT NULL , 
     SERVICE_TIME   VARCHAR2 (50 CHAR)
    ) 
;

CREATE TABLE CATEGORY 
    ( 
     CATEGORY_CODE INTEGER  NOT NULL , 
     CATEGORY_NAME VARCHAR2 (20 CHAR)  NOT NULL 
    ) 
;

CREATE TABLE MENU 
    ( 
     STORE_ID  VARCHAR2 (20 CHAR)  NOT NULL , 
     MENU_NAME VARCHAR2 (30 CHAR)  NOT NULL , 
     PRICE     INTEGER  NOT NULL 
    ) 
;


CREATE TABLE STORE_SEAT 
    ( 
     STORE_ID      VARCHAR2 (20 CHAR)  NOT NULL , 
     IN_USING_SEAT INTEGER  NOT NULL 
    ) 
;

CREATE TABLE REVIEW 
    ( 
     REVIEW_ID INTEGER  NOT NULL ,
     STORE_ID  VARCHAR2 (20 CHAR)  NOT NULL , 
     USER_ID   VARCHAR2 (15 CHAR)  NOT NULL , 
     "COMENT" VARCHAR2 (50 CHAR) , 
     SCORE     INTEGER  NOT NULL
    ) 
;

CREATE TABLE FAV_STORE 
    ( 
     STORE_ID     VARCHAR2 (20 CHAR)  NOT NULL , 
     USER_ID      VARCHAR2 (15 CHAR)  NOT NULL , 
     FAV_STORE_ID INTEGER  NOT NULL 
    ) 
;

CREATE TABLE DELETE_FAIL_LOG_STORE (
    store_id VARCHAR2 (20),
    fail_msg VARCHAR2(4000),
    fail_time TIMESTAMP
);


CREATE SEQUENCE FAV_STORE_FAV_STORE_ID_SEQ 
    START WITH 1 
    INCREMENT BY 1
    NOCACHE 
    ORDER ;



CREATE SEQUENCE REVIEW_REVIEW_ID_SEQ 
    START WITH 1 
    INCREMENT BY 1
    NOCACHE 
    ORDER ;



ALTER TABLE FAV_STORE 
    ADD CONSTRAINT FAV_STORE_PK PRIMARY KEY ( FAV_STORE_ID ) ;

ALTER TABLE REVIEW 
    ADD CONSTRAINT REVIEW_STORE_USER_UN UNIQUE ( STORE_ID , USER_ID ) ;

ALTER TABLE FAV_STORE 
    ADD CONSTRAINT FAV_STORE_UN UNIQUE ( STORE_ID , USER_ID ) ;

ALTER TABLE REVIEW 
    ADD CONSTRAINT REVIEW_PK PRIMARY KEY ( REVIEW_ID ) ;

ALTER TABLE STORES 
    ADD CONSTRAINT STORES_PK PRIMARY KEY ( STORE_ID ) ;

ALTER TABLE CATEGORY 
    ADD CONSTRAINT CATEGORY_PK PRIMARY KEY ( CATEGORY_CODE ) ;

ALTER TABLE STORE_SEAT 
    ADD CONSTRAINT STORE_SEAT_PK PRIMARY KEY ( STORE_ID ) ;



ALTER TABLE STORES 
    ADD CONSTRAINT STORES_CATEGORY_FK FOREIGN KEY 
    ( 
     CATEGORY_CODE
    ) 
    REFERENCES CATEGORY 
    ( 
     CATEGORY_CODE
    ) 
;

ALTER TABLE MENU 
    ADD CONSTRAINT MENU_STORES_FK FOREIGN KEY 
    ( 
     STORE_ID
    ) 
    REFERENCES STORES 
    ( 
     STORE_ID
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE STORE_SEAT 
    ADD CONSTRAINT STORE_SEAT_STORES_FK FOREIGN KEY 
    ( 
     STORE_ID
    ) 
    REFERENCES STORES 
    ( 
     STORE_ID
    ) 
    ON DELETE CASCADE 
;


ALTER TABLE FAV_STORE 
    ADD CONSTRAINT FAV_STORE_MV_USERS_STORES_FK FOREIGN KEY 
    ( 
     STORE_ID
    ) 
    REFERENCES STORES 
    ( 
     STORE_ID
    ) 
    ON DELETE CASCADE 
;

CREATE DATABASE LINK PDB_STORES_LINK
CONNECT TO STORE_ADMIN IDENTIFIED BY oracle
USING 'PDB_STORE';


CREATE OR REPLACE TRIGGER TRG_STORES_DELETE
AFTER DELETE ON STORES
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    BEGIN
        DELETE FROM BOOKING@PDB_BOOKING_LINK
        WHERE STORE_ID = :OLD.STORE_ID;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            INSERT INTO delete_fail_log(STORE_ID, fail_msg, fail_time)
            VALUES (:OLD.STORE_ID, SQLERRM, SYSTIMESTAMP);
            COMMIT;
    END;
END;
/
